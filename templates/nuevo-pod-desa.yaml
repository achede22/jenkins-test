apiVersion: v1
kind: Template
labels:
  app: microservicios
metadata:
  annotations:
    description: TEMPLATE DE CREACION DE APLICACION/PIPELINE
    iconClass: fa fa-server
    openshift.io/display-name: (+) Nuevo Pod + Pipeline
  creationTimestamp: null
  name: nuevo-pod-desa
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${PARAM_APP_NAME}
    name: ${PARAM_APP_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${PARAM_APP_NAME}
    name: ${PARAM_APP_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${PARAM_APP_NAME}:latest
    runPolicy: Serial
    source:
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: ${PARAM_ISTAG}
          namespace: openshift
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${PARAM_APP_NAME}
    name: ${PARAM_APP_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${PARAM_APP_NAME}
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          deploymentConfig: ${PARAM_APP_NAME}
          name: ${PARAM_APP_NAME}
      spec:
        containers:
        - env:
          - name: TZ
            value: America/Argentina/Buenos_Aires
          - name: SERVER_PORT
            value: "8080"
          - name: LANG_FILE
            value: hello.es
          image: docker-registry.default.svc:5000/${PARAM_PROJ_NAME}/${PARAM_APP_NAME}:latest
          name: ${PARAM_APP_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
    triggers: []
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${PARAM_APP_NAME}
    name: ${PARAM_APP_NAME}
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentConfig: ${PARAM_APP_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels: name:${PARAM_APP_NAME}
    name: ${PARAM_APP_NAME}
  spec:
    host: ${PARAM_APP_NAME}-${PARAM_PROJ_NAME}.test.com.ar
    path: /
    to:
      kind: Service
      name: ${PARAM_APP_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${PARAM_APP_NAME}-pipeline
    name: ${PARAM_APP_NAME}-pipeline
  spec:
    labels: name:${PARAM_APP_NAME}
    source:
      contextDir: null
      git:
        ref: master
        uri: http://git.bancogalicia.com.ar/SacaTuTurno/devops.git
      type: Git
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: GIT_PROYECTO
          value: ${PARAM_PROJ_NAME}
        - name: GIT_ORGA
          value: ${PARAM_ORGANIZACION}
        - name: GIT_REPO
          value: ${PARAM_GIT_REPO}
        - name: GIT_BRANCH
          value: ${PARAM_GIT_BRANCH}
        - name: APP_NAME
          value: ${PARAM_APP_NAME}
        - name: LANGUAGE
          value: ${PARAM_LANGUAGE}
        jenkinsfilePath: pipelines/desa.js
      type: JenkinsPipeline
    triggers:
    - generic:
        allowEnv: true
        secret: ${PARAM_WEBHOOK_SECRET}
      type: Generic
parameters:
- description: Nombre del Proyecto (Ej. sacatuturno-dev)
  displayName: Nombre del Proyecto
  name: PARAM_PROJ_NAME
  required: true
  value: sacatuturno-dev
- description: Nombre de la aplicación, NO usar puntos. (Ej. ms-ejemplo)
  displayName: Nombre
  name: PARAM_APP_NAME
  required: true
  value: ms-ejemplo
- description: Organizacion GIT .(Ej. SacaTuTurno)
  displayName: Organizacion GIT
  name: PARAM_ORGANIZACION
  required: true
  value: SacaTuTurno
- description: Repositorio donde se toman las variables, NO la URL, sólo el nombre
    del repo sin el .git (Ej. ms-ejemplo)
  displayName: Repositorio GIT
  name: PARAM_GIT_REPO
  required: true
- description: El nombre del Git Branch a tomar (develop - Desarrollo | master - Homologacion).
  displayName: Git Branch
  name: PARAM_GIT_BRANCH
  required: true
  value: develop
- description: Nombre del secret para el webhook - opcional
  displayName: Webhook Secret
  from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: PARAM_WEBHOOK_SECRET
- description: Java = redhat-openjdk18-openshift:1.2 || Python3 = python:3.6 || NodeJS8
    = nodejs:8 || Netcore22 = dotnet:2.2
  displayName: Image Builder
  name: PARAM_ISTAG
  required: true
  value: dotnet:2.2
- description: Lenguage, valores aceptados = maven, maven11 , python , nodejs8 , dotnet-22
    (respetar minúsculas)
  displayName: Lenguage de programación utilizado
  name: PARAM_LANGUAGE
  required: true
  value: dotnet-22
